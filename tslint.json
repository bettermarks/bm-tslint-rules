{
  "extends": [
    // TSLINT: https://palantir.github.io/tslint/rules/
    "tslint-eslint-rules", // https://eslint.org/docs/rules/
    "tslint-microsoft-contrib", // https://github.com/Microsoft/tslint-microsoft-contrib#supported-rules
    "tslint-react", // https://github.com/palantir/tslint-react#rules
    "tslint-no-unused-expression-chai" // https://github.com/karfau/tslint-no-unused-expression-chai/tree/should-support
  ],
  "rulesDirectory": "dist",
  "rules": {
    "align": [
      true,
      "parameters",
      "arguments",
      "statements"
    ],
    "array-bracket-spacing": [
      true,
      "never"
    ],
    "array-type": [
      true,
      "array"
    ],
    "arrow-parens": false,
    "arrow-return-shorthand": [true],
    "ban": [
      true,
      ["alert"]
    ],
    "binary-expression-operand-order": false, // reports lots of false positives
    "brace-style": [
      true,
      "1tbs",
      {
        "allowSingleLine": false
      }
    ],
    "chai-vague-errors": false,
    "class-name": true,
    "cyclomatic-complexity": [
      true,
      9
    ],
    "comment-format": [
      true,
      "check-space"
    ],
    "completed-docs": false,
    "consistent-return": false,
    "curly": [true, "ignore-same-line"],
    "eofline": true,
    "export-name": false,
    "file-name-casing": false, // it only allows to pick a single casing type, would break lot's of code bases
    "forin": true,
    "function-name": false,
    "handle-callback-err": true,
    "indent": [
      true,
      "spaces"
    ],
    "interface-name": false,
    "import-name": false,
    //some overlap with no-multi-spaces but it also covers the missing space after import in
    // import* as React from 'react';
    "import-spacing": true,
    "informative-docs": true, // since we do a breaking version, let's see what it finds might be disabled in next version
    "insecure-random": false,
    "jsdoc-format": false,
    "jsx-alignment": false, //good for prod?
    //jsx-ban-props:false,
    "jsx-boolean-value": false,
    "jsx-curly-spacing": ["never"],
    "jsx-no-lambda": false, //is covered by react-this-binding-issue
    "jsx-no-multiline-js": false,
    "jsx-no-string-ref": true,
    //jsx-use-translation-function:true //off by default,good for production
    "jsx-self-close": true, //duplicate?
    "jsx-wrap-multiline": true, // known issue https://github.com/palantir/tslint-react/issues/79
    "label-position": true,
    "match-default-export-name": false,
    "max-classes-per-file": false,
    "max-func-body-length": false,
    "max-line-length": [
      true,
      100
    ],
    "member-ordering": false,
    "member-access": false,
    "missing-jsdoc": false,
    "new-parens": true,
    "newline-before-return": false,
    "newline-per-chained-call": false, // not going to introduce more formatting rules (go prettier or enable yourself)
    "no-absolute-import-to-own-parent": true,
    "no-angle-bracket-type-assertion": true,
    "no-any": false,
    "no-arg": true,
    "no-bitwise": true,
    "no-boolean-literal-compare": true,
    "no-backbone-get-set-outside-model": false,
    "no-consecutive-blank-lines": [
      true,
      3
    ],
    "no-console": false,
    "no-constant-condition": true,
    "no-construct": true,
    "no-control-regex": true,
    "no-debugger": true,
    "no-default-export": false,
    "no-duplicate-variable": true,
    "no-empty": true,
    "no-empty-character-class": true,
    "no-eval": true,
    "no-ex-assign": true,
    "no-extra-boolean-cast": true,
    "no-extra-semi": false,
    "no-http-string": false,
    "no-increment-decrement": false,
    "no-inferrable-types": true,
    "no-inner-declarations": [
      true,
      "both"
    ],
    "no-internal-module": true,
    "no-invalid-regexp": true,
    "no-irregular-whitespace": true,
    "no-multi-spaces": true,
    "no-multiline-string": false,
//    "no-object-literal-type-assertion": false, // TODO: good candidate, but loooots of usages right now
    "no-parameter-properties": false,
    "no-regex-spaces": true,
    "no-require-imports": false,
    "no-relative-imports": false,
    "no-reserved-keywords": false,
    "no-shadowed-variable": false,
    "no-single-line-block-comment": false,
    "no-sparse-arrays": true,
//    "no-submodule-imports": false, // disable in bm-toolbox?
    "no-suspicious-comment": false,
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    "no-this-assignment": true,
    "no-trailing-whitespace": true,
    "no-unsafe-any": false,
    "no-unnecessary-class": true,
    "no-unnecessary-semicolons": false,
    "no-unused-expression-chai": [ // "no-unused-expression" is disabled by extending config with the same name
      true,
      "allow-fast-null-checks",
      "should"
    ],
    "no-unused-variable": [
      // in agreement with https://github.com/palantir/tslint/issues/4100
      // this ruleset doesn't force people to switch to compile error
      // for getting rid of unused things, this currently means
      // paying the price of the deprecation warning
      true
    ],
    "no-use-before-declare": true,
    "no-useless-files": true,
    "no-void-expression": false,
    "no-var-keyword": false,
    "no-var-requires": true,
    "object-curly-spacing": [
      true,
      "never"
    ],
    "object-literal-key-quotes": [
      true,
      "as-needed"
    ],
    "one-line": [
      true,
      "check-open-brace",
      "check-whitespace"
    ],
    "one-variable-per-declaration": false,
    "ordered-imports": false,
    "prefer-const": true,
    "prefer-method-signature": false,
    "prefer-type-cast": false,
    "quotemark": [
      true,
      "single",
      "avoid-escape"
    ],
    "radix": true,
    "react-a11y-anchors": true,
    "react-a11y-aria-unsupported-elements": true,
    "react-a11y-event-has-role": true,
    "react-a11y-image-button-has-alt": true,
    "react-a11y-img-has-alt": true,
    "react-a11y-lang": true,
    "react-a11y-meta": true,
    "react-a11y-no-onchange": false, // makes sense but might break to many things
    "react-a11y-props": true,
    "react-a11y-proptypes": true,
    "react-a11y-role": true,
    "react-a11y-role-has-required-aria-props": true,
    "react-a11y-role-supports-aria-props": true,
    "react-a11y-tabindex-no-positive": true,
    "react-a11y-titles": true,
    "react-anchor-blank-noopener": true,
    "react-iframe-missing-sandbox": true,
    "react-no-dangerous-html": true,
    "react-this-binding-issue": true,
    "react-unused-props-and-state": true,
    "restrict-plus-operands": false,
    "semicolon": [
      true,
      "always"
    ],
    "space-before-function-paren": [
      true,
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always",
        "method": "never",
        "constructor": "never"
      }
    ],
    "space-in-parens": [
      true,
      "never"
    ],
    "strict-boolean-expressions": [
      false,
      "allow-null-union",
      "allow-undefined-union"
    ],
    "switch-default": true,
    "ter-arrow-spacing": [
      true
    ],
    "ter-indent": [
      true,
      2,
      {
        "SwitchCase": true
      }
    ],
    "trailing-comma": [
      true,
      {
        "multiline": "never",
        "singleline": "never"
      }
    ],
    "triple-equals": true,
    "typedef": false,
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      }
    ],
    "unified-signatures": true,
    "use-isnan": true,
    "use-simple-attributes": false, // might make sense, but as a general rule???
    "valid-jsdoc": [
      false,
      {
        "requireReturn": false
      }
    ],
    "valid-typeof": true,
    "variable-name": false,
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-separator",
      "check-type"
    ]
  }
}
